@if (rollsLoading)
{

    <Chase Size="100px" style="margin-left:45%; margin-top: 45vh;"></Chase>

}
else
{

    <div class="container-fluid shadow">
        <div class="row">
            <div class="col-4">
                <input placeholder="Industry Name" @bind="S.IndustryName" class="form-control">
            </div>
            <div class="col-4">
                @if (savingPossition)
                {
                    <Pulse Size="30px"></Pulse>
                }
                else
                {
                    <button class="btn btn-primary" @onclick="addPossition"> Add </button>
                }


            </div>
        </div>

        <div class="row" style="margin-top:25px">
            <div class="col-6">
                <table class="table table-dark table-bordered border-primary">
                    <thead>
                        <tr>
                            <th>
                                Industry Name
                            </th>
                            <th>
                                -
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ro in Industries)
                        {
                            <tr>
                                <td>
                                    @ro.IndustryName
                                </td>
                                <td class="close-btn-table-width">
                                    <button class="btn btn-close position-delete-btn" @onclick="async ()=>{

                                    using(sealConsultantContext dbcontext = new sealConsultantContext())
                                    {
                                        try{

                                              dbcontext.Industries.Remove(ro);
                                              await dbcontext.SaveChangesAsync();
                                              Industries = await dbcontext.Industries.ToListAsync();
                                              await InvokeAsync(StateHasChanged);
                                        }catch{

                                        }




                                    }


                                    }"></button>
                                </td>
                            </tr>
                        }
                    </tbody>


                </table>


            </div>
        </div>

    </div>
}


@code {

    bool saving = false;
    bool savingPossition = false;
    Industry S = new Industry();
    bool rollsLoading = true;
    List<Industry> Industries = new List<Industry>();
    protected override async Task OnInitializedAsync()
    {
        rollsLoading = true;
        await InvokeAsync(StateHasChanged);

        using (sealConsultantContext dbcontext = new sealConsultantContext())
        {

            Industries = await dbcontext.Industries.ToListAsync();

        }


        rollsLoading = false;
        await InvokeAsync(StateHasChanged);


    }

    async Task addPossition()
    {
        savingPossition = true;
        await InvokeAsync(StateHasChanged);
        using (sealConsultantContext dbcontext = new sealConsultantContext())
        {
            S.IndustryId = Guid.NewGuid();
            dbcontext.Industries.Add(S);
            await dbcontext.SaveChangesAsync();
            Industries = await dbcontext.Industries.ToListAsync();
            S = new Industry();

        }
        savingPossition = false;
        await InvokeAsync(StateHasChanged);
    }
}
